[Rainmeter]
Update=1000
DynamicWindowSize=1

[Metadata]
Name=Minutes Into & After
Author=sookiemonster
Information=Displays the minutes before school, minutes into and left of periods / transitions, and minutes after school. | Before and after school does not take into account free periods & lunch.
License=
Version=1.0

[Variables]
@Include=#@#\half_day_variables.inc
@Include2=#@#\styles.inc
@Include3=#@#\variables.inc

minutesin = 0
minutesleft = 0

;Gets the current hour based on the system clock
[CurrentHour]
Measure=Time
Format=%H

;Gets the current minutes based on the system clock
[CurrentMinutes]
Measure=Time
Format=%M

;Gets the current seconds based on the system clock
[CurrentSeconds]
Measure=Time
Format=%S

[MeasurePeriod]
Measure=Time
Format=%H%M
DynamicVariables=1
IfCondition=(MeasurePeriod < #hstart1#)
IfTrueAction=!SetVariable "activeposition" 0
IfCondition2=(MeasurePeriod >= #hstart1#) && (MeasurePeriod < #hend1#)
IfTrueAction2=[!SetOption Period1 MeterStyle Active][!SetVariable "activeposition" 1]
IfCondition3=(MeasurePeriod >= #hend1#) && (MeasurePeriod < #hstart2#)
IfTrueAction3=[!SetOption Period1 MeterStyle Transition][!SetOption Period2 MeterStyle Transition][!SetVariable "activeposition" 1.5]
IfCondition4=(MeasurePeriod >= #hstart2#) && (MeasurePeriod < #hend2#)
IfTrueAction4=[!SetOption Period2 MeterStyle Active][!SetOption Period1 MeterStyle NonActive][!SetVariable "activeposition" 2]
IfCondition5=(MeasurePeriod >= #hend2#) && (MeasurePeriod < #hstart3#)
IfTrueAction5=[!SetOption Period2 MeterStyle Transition][!SetOption Period3 MeterStyle Transition][!SetVariable "activeposition" 2.5]
IfCondition6=(MeasurePeriod >= #hstart3#) && (MeasurePeriod < #hend3#)
IfTrueAction6=[!SetOption Period3 MeterStyle Active][!SetOption Period2 MeterStyle NonActive][!SetVariable "activeposition" 3]
IfCondition7=(MeasurePeriod >= #hend3#) && (MeasurePeriod < #hstart4#)
IfTrueAction7=[!SetOption Period3 MeterStyle Transition][!SetOption Period4 MeterStyle Transition][!SetVariable "activeposition" 3.5]
IfCondition8=(MeasurePeriod >= #hstart4#) && (MeasurePeriod < #hend4#)
IfTrueAction8=[!SetOption Period4 MeterStyle Active][!SetOption Period3 MeterStyle NonActive][!SetVariable "activeposition" 4]
IfCondition9=(MeasurePeriod >= #hend4#) && (MeasurePeriod < #hstart5#)
IfTrueAction9=[!SetOption Period4 MeterStyle Transition][!SetOption Period5 MeterStyle Transition][!SetVariable "activeposition" 4.5]
IfCondition10=(MeasurePeriod >= #hstart5#) && (MeasurePeriod < #hend5#)
IfTrueAction10=[!SetOption Period5 MeterStyle Active][!SetOption Period4 MeterStyle NonActive][!SetVariable "activeposition" 5]
IfCondition11=(MeasurePeriod >= #hend5#) && (MeasurePeriod < #hstart6#)
IfTrueAction11=[!SetOption Period5 MeterStyle Transition][!SetOption Period6 MeterStyle Transition][!SetVariable "activeposition" 5.5]
IfCondition12=(MeasurePeriod >= #hstart6#) && (MeasurePeriod < #hend6#)
IfTrueAction12=[!SetOption Period6 MeterStyle Active][!SetOption Period5 MeterStyle NonActive][!SetVariable "activeposition" 6]
IfCondition13=(MeasurePeriod >= #hend6#) && (MeasurePeriod < #hstart7#)
IfTrueAction13=[!SetOption Period6 MeterStyle Transition][!SetOption Period7 MeterStyle Transition][!SetVariable "activeposition" 6.5]
IfCondition14=(MeasurePeriod >= #hstart7#) && (MeasurePeriod < #hend7#)
IfTrueAction14=[!SetOption Period7 MeterStyle Active][!SetOption Period6 MeterStyle NonActive][!SetVariable "activeposition" 7]
IfCondition15=(MeasurePeriod >= #hend7#) && (MeasurePeriod < #hstart8#)
IfTrueAction15=[!SetOption Period7 MeterStyle Transition][!SetOption Period8 MeterStyle Transition][!SetVariable "activeposition" 7.5]
IfCondition16=(MeasurePeriod >= #hstart8#) && (MeasurePeriod < #hend8#)
IfTrueAction16=[!SetOption Period8 MeterStyle Active][!SetOption Period7 MeterStyle NonActive][!SetVariable "activeposition" 8]
IfCondition17=(MeasurePeriod >= #hend8#) && (MeasurePeriod < #hstart9#)
IfTrueAction17=[!SetOption Period8 MeterStyle Transition][!SetOption Period9 MeterStyle Transition][!SetVariable "activeposition" 8.5]
IfCondition18=(MeasurePeriod >= #hstart9#) && (MeasurePeriod < #hend9#)
IfTrueAction18=[!SetOption Period9 MeterStyle Active][!SetOption Period8 MeterStyle NonActive][!SetVariable "activeposition" 9]
IfCondition19=(MeasurePeriod >= #hend9#) && (MeasurePeriod < #hstart10#)
IfTrueAction19=[!SetOption Period9 MeterStyle Transition][!SetOption Period10 MeterStyle Transition][!SetVariable "activeposition" 9.5]
IfCondition20=(MeasurePeriod > #hend10#)
IfTrueAction20=[!SetOption Period10 MeterStyle NonActive][!SetVariable "activeposition" 11]

;Makes objects hidden (output=1) if the current time is before or after school, or if a transition is occuring
[Hidden]
Measure=Calc
DynamicVariables=1
Formula=(#activeposition# % 11 = 0) || (#activeposition# % 1 = 0.5) ? 1 : 0

;Calculates how many minutes it is after the periods start time
[CurrentTimeMinutes]
Measure=Calc
DynamicVariables=1
Formula=(([CurrentHour] * 60) + [CurrentMinutes])

;Meter displaying the number of minutes into the current period // Hidden if the current time is before or after school, or if periods are transitioning
[MinutesInto]
Meter=String
DynamicVariables=1
MeterStyle=TextStyle
Text=#minutesin#
InlinePattern=\D
InlineSetting=Size | 12
InlinePattern2=\D
InlineSetting2=Color | #primary#
Y=290
X=20
Hidden=[Hidden]

;Meter displaying the number of minutes left before the class ends // Hidden if the current time is before or after school, or if periods are transitioning
[MinutesLeft]
Meter=String
DynamicVariables=1
MeterStyle=TextStyle
Text=#minutesleft#
InlinePattern=\D
InlineSetting=Size | 12
InlinePattern2=\D
InlineSetting2=Color | #secondary#
Y=27r
X=20
Hidden=[Hidden]

[MinutesBefore]
Measure=Calc
DynamicVariables=1
Formula=550 - (([CurrentHour] * 60) + [CurrentMinutes])

[BeforeSchool]
Meter=String
DynamicVariables=1
MeterStyle=TextStyle
MeasureName=MinutesBefore
Text=%1 MINUTE(S) BEFORE SCHOOL
InlinePattern=\D
InlineSetting=Size | 12
InlinePattern2=\D
InlineSetting2=Color | #secondary#
ClipString=2
W=150
Y=290
X=20
Hidden=(#activeposition# = 0 ? 0 : 1)

[MinutesAfter]
Measure=Calc
DynamicVariables=1
Formula=(([CurrentHour] * 60) + [CurrentMinutes])-719

[AfterSchool]
Meter=String
DynamicVariables=1
MeterStyle=TextStyle
MeasureName=MinutesAfter
Text=%1 MINUTE(S) AFTER SCHOOL
InlinePattern=\D
InlineSetting=Size | 12
InlinePattern2=\D
InlineSetting2=Color | #secondary#
ClipString=2
W=150
Y=290
X=20
Hidden=(#activeposition# = 11 ? 0 : 1)

[SecondsBeforeNextClass]
Measure=Calc
DynamicVariables=1
Formula=60-[CurrentSeconds]

[BeforeNextClass]
Meter=String
DynamicVariables=1
MeterStyle=TextStyle
MeasureName=SecondsBeforeNextClass
Text=0
InlinePattern=\D
InlineSetting=Size | 12
InlinePattern2=\D
InlineSetting2=Color | #secondary#
ClipString=2
W=150
Y=290
X=20
Hidden=((#activeposition# % 1 = 0.5) ? 0 : 1)

[GetToday]
Measure = Time
Format = %w
DynamicVariables = 1

[TransitionToNext]
Measure=Calc
DynamicVariables=1
Formula=#activeposition# + 0.5

[NextClass]
Meter=String
DynamicVariables=1
MeterStyle=TextStyle
InlinePattern=Next Class
InlineSetting=Color | #primary#
InlineSetting2=Case | Upper
Text=Next Class [#period[&TransitionToNext]]
ClipString=2
W=150
Y=60r
X=20
Hidden=((#activeposition# % 1 = 0.5) ? 0 : 1)

[LuaScript]
Measure=Script
ScriptFile=..\@Resources\Scripts\HalfDayMinutesIntoAfter.lua
